"""First

Revision ID: 79b28abe0489
Revises: 
Create Date: 2022-09-26 04:44:47.108934

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '79b28abe0489'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_id'), 'project', ['id'], unique=True)
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('regular', 'admin', name='roles'), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=True)
    op.create_table('domain',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_scanned_at', sa.DateTime(), nullable=True),
    sa.Column('domain', sa.String(), nullable=True),
    sa.Column('whois_org', sa.String(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('is_scanned', sa.Boolean(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('domain', 'project_id', name='unique_domain')
    )
    op.create_index(op.f('ix_domain_id'), 'domain', ['id'], unique=True)
    op.create_table('subnet',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_scanned_at', sa.DateTime(), nullable=True),
    sa.Column('subnet', sa.String(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('is_scanned', sa.Boolean(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('subnet', 'project_id', name='unique_subnet')
    )
    op.create_index(op.f('ix_subnet_id'), 'subnet', ['id'], unique=True)
    op.create_table('email',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_scanned_at', sa.DateTime(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('is_scanned', sa.Boolean(), nullable=True),
    sa.Column('domain_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['domain_id'], ['domain.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', 'project_id', name='unique_email')
    )
    op.create_index(op.f('ix_email_id'), 'email', ['id'], unique=True)
    op.create_table('ip',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_scanned_at', sa.DateTime(), nullable=True),
    sa.Column('ip', sa.String(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('is_scanned', sa.Boolean(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('subnet_id', sa.Integer(), nullable=True),
    sa.Column('netname', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subnet_id'], ['subnet.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ip', 'project_id', name='unique_ip')
    )
    op.create_index(op.f('ix_ip_id'), 'ip', ['id'], unique=True)
    op.create_table('subdomain',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_scanned_at', sa.DateTime(), nullable=True),
    sa.Column('subdomain', sa.String(), nullable=True),
    sa.Column('domain_id', sa.Integer(), nullable=True),
    sa.Column('is_scanned', sa.Boolean(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['domain_id'], ['domain.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('subdomain', 'project_id', name='unique_subdomain')
    )
    op.create_index(op.f('ix_subdomain_id'), 'subdomain', ['id'], unique=True)
    op.create_table('endpoint',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_scanned_at', sa.DateTime(), nullable=True),
    sa.Column('endpoint', sa.String(), nullable=True),
    sa.Column('is_scanned', sa.Boolean(), nullable=True),
    sa.Column('domain_id', sa.Integer(), nullable=True),
    sa.Column('subdomain_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['domain_id'], ['domain.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subdomain_id'], ['subdomain.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('endpoint', 'project_id', name='unique_endpoint')
    )
    op.create_index(op.f('ix_endpoint_id'), 'endpoint', ['id'], unique=True)
    op.create_table('ip_domain',
    sa.Column('ip_id', sa.Integer(), nullable=True),
    sa.Column('domain_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['domain_id'], ['domain.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ip_id'], ['ip.id'], ondelete='CASCADE')
    )
    op.create_table('service',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_scanned_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('protocol', sa.String(), nullable=True),
    sa.Column('ip_id', sa.Integer(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('is_scanned', sa.Boolean(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('port <= 65535', name='check_port_max'),
    sa.CheckConstraint('port >= 0', name='check_port_positive'),
    sa.ForeignKeyConstraint(['ip_id'], ['ip.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_id', 'ip_id', 'port', name='unique_port')
    )
    op.create_index(op.f('ix_service_id'), 'service', ['id'], unique=True)
    op.create_table('subdomain_ips',
    sa.Column('subdomain_id', sa.Integer(), nullable=True),
    sa.Column('ip_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ip_id'], ['ip.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subdomain_id'], ['subdomain.id'], ondelete='CASCADE')
    )
    op.create_table('vulnerability',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_scanned_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('severity', sa.String(), nullable=True),
    sa.Column('solution', sa.String(), nullable=True),
    sa.Column('reference', sa.String(), nullable=True),
    sa.Column('cvss', sa.String(), nullable=True),
    sa.Column('cvss_vector', sa.String(), nullable=True),
    sa.Column('cvss_score', sa.String(), nullable=True),
    sa.Column('cvss_severity', sa.String(), nullable=True),
    sa.Column('cvss_version', sa.String(), nullable=True),
    sa.Column('cwe', sa.String(), nullable=True),
    sa.Column('cve', sa.String(), nullable=True),
    sa.Column('poc', sa.String(), nullable=True),
    sa.Column('is_exploitable', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_false_positive', sa.Boolean(), nullable=True),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('is_scanned', sa.Boolean(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['service_id'], ['service.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'service_id', 'project_id', name='unique_vulnerability')
    )
    op.create_index(op.f('ix_vulnerability_id'), 'vulnerability', ['id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vulnerability_id'), table_name='vulnerability')
    op.drop_table('vulnerability')
    op.drop_table('subdomain_ips')
    op.drop_index(op.f('ix_service_id'), table_name='service')
    op.drop_table('service')
    op.drop_table('ip_domain')
    op.drop_index(op.f('ix_endpoint_id'), table_name='endpoint')
    op.drop_table('endpoint')
    op.drop_index(op.f('ix_subdomain_id'), table_name='subdomain')
    op.drop_table('subdomain')
    op.drop_index(op.f('ix_ip_id'), table_name='ip')
    op.drop_table('ip')
    op.drop_index(op.f('ix_email_id'), table_name='email')
    op.drop_table('email')
    op.drop_index(op.f('ix_subnet_id'), table_name='subnet')
    op.drop_table('subnet')
    op.drop_index(op.f('ix_domain_id'), table_name='domain')
    op.drop_table('domain')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_project_id'), table_name='project')
    op.drop_table('project')
    # ### end Alembic commands ###
