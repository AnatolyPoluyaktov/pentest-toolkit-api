from app.models.targets.email import Email
from app.schemas.targets.email import EmailCreate, EmailUpdate
from app.schemas.targets.domain import DomainCreate, DomainUpdate
from app.schemas.targets.subdomain import SubdomainCreate, SubdomainUpdate
from app.services.base_crud import BaseCrudService
from app.services.domain import domain_service
from fastapi import HTTPException, status
from app.services.subdomain import subdomain_service

import tldextract
from sqlalchemy.orm import Session
from dns.resolver import resolve


class EmailService(BaseCrudService[Email, EmailCreate, EmailUpdate]):
    def create(self, db: Session, object_data: EmailCreate, **kwargs) -> Email:
        try:
            obj = self.get_by(db, **kwargs)
            if obj:
                return obj
            email = Email(
                email=object_data.email,
                project_id=object_data.project_id,
            )
        except Exception as e:
            db.rollback()
            raise

        db.add(email)
        db.commit()
        db.refresh(email)

        return email


service_email = EmailService(Email)