from sqlalchemy import (Boolean, CheckConstraint, Column, ForeignKey, Integer,
                        String, UniqueConstraint)
from sqlalchemy.orm import relationship

from app.db.base_class import Base
from app.utils.mixins import TimestampMixin


class Service(TimestampMixin, Base):
    name = Column(String, nullable=True)
    port = Column(Integer, nullable=True)
    protocol = Column(String, nullable=True)
    ip_id = Column(Integer, ForeignKey("ip.id", ondelete="CASCADE"))
    ip = relationship("Ip", back_populates="services")

    __table_args__ = (
        CheckConstraint(port >= 0, name="check_port_positive"),
        CheckConstraint(port <= 65535, name="check_port_max"),
        UniqueConstraint("project_id", "ip_id", "port", name="unique_port"),
        {},
    )
    is_approved = Column(Boolean, default=True)
    is_scanned = Column(Boolean, default=False)
    project_id = Column(Integer, ForeignKey("project.id", ondelete="CASCADE"))
    project = relationship("Project", back_populates="services")
    vulnerabilities = relationship(
        "Vulnerability", cascade="all, delete", back_populates="service"
    )
