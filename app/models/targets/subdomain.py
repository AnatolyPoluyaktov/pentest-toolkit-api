from sqlalchemy import (Boolean, Column, ForeignKey, Integer, String, Table,
                        UniqueConstraint)
from sqlalchemy.orm import relationship

from app.db.base_class import Base
from app.utils.mixins import TimestampMixin

subdomain_ips = Table(
    "subdomain_ips",
    Base.metadata,
    Column("subdomain_id", Integer, ForeignKey("subdomain.id", ondelete="CASCADE")),
    Column("ip_id", Integer, ForeignKey("ip.id", ondelete="CASCADE")),
)


class SubDomain(TimestampMixin, Base):
    subdomain = Column(String, nullable=True)
    domain_id = Column(Integer, ForeignKey("domain.id", ondelete="CASCADE"))
    ips = relationship(
        "Ip", secondary=subdomain_ips, back_populates="subdomains", passive_deletes=True
    )
    endpoints = relationship(
        "Endpoint", cascade="all, delete", back_populates="subdomain"
    )
    domain = relationship("Domain", back_populates="subdomains")
    is_scanned = Column(Boolean, default=False)
    project_id = Column(Integer, ForeignKey("project.id", ondelete="CASCADE"))
    project = relationship("Project", back_populates="domains")
    __table_args__ = (
        UniqueConstraint("subdomain", "project_id", name="unique_subdomain"),
        {},
    )
