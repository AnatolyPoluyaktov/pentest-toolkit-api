from fastapi import APIRouter, Depends, status
from fastapi.security import HTTPBasicCredentials, OAuth2PasswordRequestForm
from app.schemas import IpCreate, Ip, User
from app.utils.deps import get_db, get_current_active_superuser, get_current_user
from sqlalchemy.orm import Session
from app.services.ip import service_ip

router = APIRouter(
    prefix="/ips",
    tags=["ips"],
)

@router.get("/", response_model=list[Ip])
def ip_list(
        skip: int = 0,
        limit: int = 100,
        db: Session = Depends(get_db),
        current_user: User = Depends(get_current_user),
) -> list[Ip]:
    """
    Retrieve ips.
    """
    return service_ip.list(db, skip=skip, limit=limit)

@router.post("/", response_model=Ip, status_code=status.HTTP_201_CREATED, )
def create_ip(ip: IpCreate, db: Session = Depends(get_db),
              current_user: User = Depends(get_current_active_superuser), ):
    return service_ip.create(db, ip, ip=ip.ip, project_id=ip.project_id)

@router.get("/{ip_id}", response_model=Ip)
def get_ip(ip_id: int, current_user: User = Depends(get_current_user),
           db: Session = Depends(get_db), ):
    return service_ip.get(db, ip_id)

@router.delete("/{ip_id}", response_model=Ip )
def delete_ip(ip_id: int, current_user: User = Depends(get_current_active_superuser),
                db: Session = Depends(get_db), ):
        return service_ip.remove(db,ip_id)

