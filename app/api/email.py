from fastapi import APIRouter, Depends, status
from app.models import  User
from app.schemas import EmailCreate, EmailUpdate,Email
from sqlalchemy.orm import Session
from app.utils.deps import get_db, get_current_active_superuser, get_current_user

from app.services.email import service_email

router = APIRouter(
    prefix="/emails",
    tags=["emails"],
)


@router.get("/", response_model=list[Email])
def email_list(
        skip: int = 0,
        limit: int = 100,
        db: Session = Depends(get_db),
        current_user: User = Depends(get_current_user),
) -> list[Email]:
    """
    Retrieve emails.
    """
    return service_email.list(db, skip=skip, limit=limit)


@router.post("/", response_model=Email, status_code=status.HTTP_201_CREATED, )
def create_email(email: EmailCreate, db: Session = Depends(get_db),
                 current_user: User = Depends(get_current_active_superuser), ):
    return service_email.create(db, email, email=email.email, project_id=email.project_id)


@router.get("/{email_id}", response_model=Email)
def get_email(email_id: int, current_user: User = Depends(get_current_user),
              db: Session = Depends(get_db), ):
    return service_email.get(db, email_id)


@router.delete("/{email_id}", response_model=Email)
def delete_email(email_id: int, current_user: User = Depends(get_current_active_superuser),
                 db: Session = Depends(get_db), ):
    return service_email.remove(db, email_id)
