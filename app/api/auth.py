from fastapi import APIRouter, Depends
from fastapi.security import OAuth2PasswordRequestForm
from app.utils.deps import get_db, get_current_active_superuser, get_current_user
from app import schemas
from sqlalchemy.orm import Session
from app.services.auth import auth_service

router = APIRouter(
    prefix="/auth",
    tags=["auth"],
)


@router.post(
    "/access-token/",

    response_model=schemas.Token,
)
def login(
    db: Session = Depends(get_db),
    auth_data: OAuth2PasswordRequestForm = Depends(),
):
    return auth_service.authenticate_user(db, auth_data.username, auth_data.password)


@router.post(
    "/register-user",
    response_model=schemas.Token,
)
def register_user(

    user: schemas.UserCreate,
    db: Session = Depends(get_db),
    current_user: schemas.User = Depends(get_current_active_superuser),  # noqa: F841
):
    return auth_service.register_new_user(db, user)


@router.get(
    "/user/me",
    response_model=schemas.UserWithRole,
)
def get_user(user: schemas.User = Depends(get_current_user)):
    return user
