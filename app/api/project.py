from fastapi import APIRouter, Depends, status
from fastapi.security import HTTPBasicCredentials, OAuth2PasswordRequestForm
from app.schemas import ProjectCreate, ProjectUpdate, Project, User
from app.utils.deps import get_db, get_current_active_superuser, get_current_user
from sqlalchemy.orm import Session
from app.services.project import service_project

router = APIRouter(
    prefix="/projects",
    tags=["projects"],
)


@router.get("/", response_model=list[Project])
def project_list(
        skip: int = 0,
        limit: int = 100,
        db: Session = Depends(get_db),
        current_user: User = Depends(get_current_user),
) -> list[Project]:
    """
    Retrieve projects.
    """
    return service_project.list(db, skip=skip, limit=limit)


@router.post(
    "/",
    response_model=Project,
    status_code=status.HTTP_201_CREATED,
)
def create_project(
        project: ProjectCreate,
        db: Session = Depends(get_db),
        current_user: User = Depends(get_current_active_superuser),
):
    return service_project.create(db, project, name=project.name)


@router.get("/{project_id}", response_model=Project)
def get_domain(
        project_id: int,
        current_user: User = Depends(get_current_user),
        db: Session = Depends(get_db),
):
    return service_project.get(db, project_id)

@router.patch("/{project_id}", response_model=Project)
def update_domain(
        project_id: int,
        project: ProjectUpdate,
        current_user: User = Depends(get_current_active_superuser),
        db: Session = Depends(get_db),
):
    return service_project.update(project_id, project)


@router.delete("/{project_id}", response_model=Project)
def delete_domain(
        project_id: int,
        current_user: User = Depends(get_current_active_superuser),
        db: Session = Depends(get_db),
):
    return service_project.remove(db,project_id)
