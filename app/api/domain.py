from fastapi import APIRouter, Depends, status
from fastapi.security import HTTPBasicCredentials, OAuth2PasswordRequestForm
from app.schemas import DomainCreate, DomainUpdate, Domain, User
from app.utils.deps import get_db, get_current_active_superuser, get_current_user
from sqlalchemy.orm import Session
from app.services.domain import domain_service

router = APIRouter(
    prefix="/domains",
    tags=["domains"],
)


@router.get("/", response_model=list[Domain])
def domain_list(
        skip: int = 0,
        limit: int = 100,
        db: Session = Depends(get_db),
        current_user: User = Depends(get_current_user),
) -> list[Domain]:
    """
    Retrieve domains.
    """
    return domain_service.list(db, skip=skip, limit=limit)


@router.post("/", response_model=Domain, status_code=status.HTTP_201_CREATED, )
def create_domain(domain: DomainCreate, db: Session = Depends(get_db),
                  current_user: User = Depends(get_current_active_superuser), ):
    return domain_service.create(db, domain, domain=domain.domain, project_id=domain.project_id)


@router.get("/{domain_id}", response_model=Domain)
def get_domain(domain_id: int, current_user: User = Depends(get_current_user),
               db: Session = Depends(get_db), ):
    return domain_service.get(db, domain_id)


@router.delete("/{domain_id}", response_model=Domain)
def delete_domain(domain_id: int, current_user: User = Depends(get_current_active_superuser),
                  db: Session = Depends(get_db), ):
    return domain_service.remove(domain_id)
