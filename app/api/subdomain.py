from fastapi import APIRouter, Depends, status
from fastapi.security import HTTPBasicCredentials, OAuth2PasswordRequestForm
from app.schemas import SubdomainCreate, SubdomainUpdate, Subdomain, User
from app.utils.deps import get_db, get_current_active_superuser, get_current_user
from sqlalchemy.orm import Session
from app.services.subdomain import subdomain_service

router = APIRouter(
    prefix="/subdomains",
    tags=["subdomains"],
)


@router.get("/", response_model=list[Subdomain])
def subdomain_list(
        skip: int = 0,
        limit: int = 100,
        db: Session = Depends(get_db),
        current_user: User = Depends(get_current_user),
) -> list[Subdomain]:
    """
    Retrieve subdomains.
    """
    return subdomain_service.list(db, skip=skip, limit=limit)


@router.post("/", response_model=Subdomain, status_code=status.HTTP_201_CREATED, )
def create_subdomain(subdomain: SubdomainCreate, db: Session = Depends(get_db),
                     current_user: User = Depends(get_current_active_superuser), ):
    return subdomain_service.create(db, subdomain, subdomain=subdomain.subdomain, domain_id=subdomain.domain_id,project_id=subdomain.project_id)


@router.get("/{subdomain_id}", response_model=Subdomain)
def get_subdomain(subdomain_id: int, current_user: User = Depends(get_current_user),
                  db: Session = Depends(get_db), ):
    return subdomain_service.get(db, subdomain_id)


@router.delete("/{subdomain_id}", response_model=Subdomain)
def delete_subdomain(subdomain_id: int, current_user: User = Depends(get_current_active_superuser),
                     db: Session = Depends(get_db), ):
    return subdomain_service.remove(db, subdomain_id)
