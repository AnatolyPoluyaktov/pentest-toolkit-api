from fastapi import APIRouter, Depends
from sqlalchemy.orm import Session

from app import schemas
from app.core.config import settings
from app.db.base import User  # noqa: F401
from app.db.session import get_session
from app.models.user import Roles
from app.services.auth import AuthService

# make sure all SQL Alchemy models are imported (app.db.base) before initializing DB
# otherwise, SQL Alchemy might fail to initialize relationships properly
# for more details: https://github.com/tiangolo/full-stack-fastapi-postgresql/issues/28


def init_db() -> None:
    # Tables should be created with Alembic migrations
    # But if you don't want to use migrations, create
    # the tables un-commenting the next line
    # Base.metadata.create_all(bind=engine)
    session = get_session().__next__()
    user = schemas.UserCreate(
        email=settings.admin_email, password=settings.admin_password, role=Roles.admin
    )
    auth_service = AuthService()
    user = User(
        password_hash=auth_service.hash_password(user.password),
        **user.dict(exclude={"password"})  # noqa: F841
    )
    session.add(user)
    session.commit()
    print(user)
